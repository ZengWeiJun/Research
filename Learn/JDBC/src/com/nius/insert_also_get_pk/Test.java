package com.nius.insert_also_get_pk;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.nius.utils.JdbcDaoUtils;

// 获取自动生成的主键
public class Test {
	// 插入数据的同时需要知道该记录在数据库中的主键值
	// 插入数据的同时，获取到该数据产生的主键，通常登录后需要将用户id返回给用户填写信息等其它场景下可能使用

//	Statement:
//		int executeUpdate(String sql,int autoGeneratedKeys):执行SQL:
//		         参数:autoGeneratedKeys,是否需要返回自动生成的主键.常量值:Statement.RETURN_GENERATED_KEYS 
//		ResultSet getGeneratedKeys():获取自动生成的主键
//		PreparedStatement:
//		PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)  
//		创建PreparedStatement对象,病指定是否需要返回生成的主键. 参数的常量值:Statement.RETURN_GENERATED_KEYS

	// Statement方式
	@org.junit.Test
	public void test1() throws SQLException {

		Connection connection = JdbcDaoUtils.getConnection();
		String sql = "insert t_student (name, age) values ('AAAA', 12222);";
		System.out.println(sql);
		Statement st = connection.createStatement();

		int effects = st.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
		System.out.println((effects == 1) ? "操作成功" : "操作失败");

		// 获取自动生成的主键
		ResultSet rs = st.getGeneratedKeys();
		if (rs.next()) {
			String pk = rs.getString(1); // 获取第一列
			System.out.println("自动生成的主键：" + pk);
		}

		JdbcDaoUtils.close(connection, st, rs);
	}

	// PreparedStatement方式
	@org.junit.Test
	public void test2() throws SQLException {
		Connection connection = JdbcDaoUtils.getConnection();
		String sql = "insert t_student (name, age) values (?, ?);";
		System.out.println(sql);
		PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		ps.setString(1, "AAAA"); // 设置第一个占位符参数，注意，jdbc中，索引从1开始
		ps.setInt(2, 1333); // 设置第二个占位符参数
		int effects = ps.executeUpdate();
		System.out.println((effects == 1) ? "操作成功" : "操作失败");
		
		// 获取自动生成的主键
		ResultSet rs = ps.getGeneratedKeys();
		if (rs.next()) {
			String pk = rs.getString(1); // 获取第一列
			System.out.println("自动生成的主键：" + pk);
		}

		JdbcDaoUtils.close(connection, ps, rs);
	}
}
